import java.util.ArrayList;
import java.util.List;

interface ResizableComponent {
    void resize(DisplayMode displayMode);
}


class Boundary {
    private BoundaryShape boundaryShape;
    private BoundaryLine boundaryLine;

    public Boundary(BoundaryShape boundaryShape, BoundaryLine boundaryLine) {
        this.boundaryShape = boundaryShape;
        this.boundaryLine = boundaryLine;
    }

    public Boundary(BoundaryShape boundaryShape) {
        this.boundaryShape = boundaryShape;
        this.boundaryLine = new StrightLine(color(0, 0, 0));
    }

    public Boundary() {
        this.boundaryShape = boundaryShape;
        this.boundaryLine = new StrightLine(color(0, 0, 0));  
    }

    public void display(DisplayMode displayMode) {
        List<float[]> coordinatesList = this.boundaryShape.getCoordinatesList();
        // display the boundary
        List<float[]> resizedCoordinatesList = new CoordinateTransformer().transformArray(displayMode, coordinatesList);
        color o = this.boundaryLine.getLineColor();
        stroke(o);
        beginShape();
        for (float[] coordinates : resizedCoordinatesList) {
            vertex(coordinates[0], coordinates[1]);
        }
        endShape(CLOSE);
    }
}

abstract class BoundaryShape {
    private List<float[]> coordinatesList = new ArrayList<>();

    public BoundaryShape(List<float[]> coordinatesList) {
        this.coordinatesList = coordinatesList;
    }

    public List<float[]> getCoordinatesList() {
        return coordinatesList;
    }
}

import java.util.ArrayList;

class Torso1 extends BoundaryShape {
    public Torso1() {
        super(new ArrayList<>() {{
            add(new float[]{487, 0});
            add(new float[]{459, 162});
            add(new float[]{192, 336});
            add(new float[]{258, 428});
            add(new float[]{364, 393});
            add(new float[]{371, 750});
            add(new float[]{601, 744});
            add(new float[]{625, 376});
            add(new float[]{722, 503});
            add(new float[]{740, 456});
            add(new float[]{814, 410});
            add(new float[]{814, 410});
            add(new float[]{767, 410});
            add(new float[]{568, 232});
            add(new float[]{558, 0});
        }});
    }
}

abstract class BoundaryLine {
    private color lineColor;

    public BoundaryLine(color lineColor) {
        this.lineColor = lineColor;
    }

    public color getLineColor() {
        return this.lineColor;
    }
}

class StrightLine extends BoundaryLine {
    public StrightLine(color lineColor) {
        super(lineColor);
    }
}
